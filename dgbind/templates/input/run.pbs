#!/bin/csh
{% if pbs.header -%}
{{ pbs.header }}
{% endif -%}
{% if pbs.queue -%}
#PBS -q {{ pbs.queue }}
{% endif -%}
#PBS -o ./error/out
#PBS -e ./error/err
#PBS -l nodes={{ nodes_per_job }}:ppn={{ cpus_per_node }}
#PBS -l walltime=12:00:00
#PBS -N {{ jobname }}

cd $PBS_O_WORKDIR

mkdir -p error

@ ncpus  = {{ nodes_per_job * cpus_per_node }}
@ cntmax = {{ num_windows }}
@ pcnt   = $icnt - 1
@ ncnt   = $icnt + 1
{% if windows is defined %}
{% for window in windows -%}
if ( $icnt == {{window}} ) then
  set target = {{ windows[window].refvalue }}
  set force = {{ windows[window].force }}
endif
{% endfor %}
{% else %}
set target = `echo "{{ refvalue|default(0.0) }} + {{ delta }} * $icnt" | bc`
set force = {{ force }}
{% endif -%}

if ( $cntmax > $ncnt ) qsub -N {{ jobname }}_$ncnt -v icnt=$ncnt -W depend=afterok:$PBS_JOBID run.pbs

sed -e 's/$step/'$icnt'/g' -e 's/$target/'$target'/g' namd.conf > input.$icnt.conf

if ( $icnt > 0 ) then
    python prepare.py input.$pcnt.dcd input.$icnt.pdb $target $force
endif

{% if use_rest %}
{{ restdir }}/charmrun +p$ncpus {{ restdir }}/namd2 input.$icnt.conf > input.$icnt.log
{% else %}
{{ namddir }}/charmrun +p$ncpus {{ namddir }}/namd2 input.$icnt.conf > input.$icnt.log
{% endif %}
